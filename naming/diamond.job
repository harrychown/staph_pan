#!/bin/bash --login
#$ -cwd
#$ -N name
#$ -M harry.chown@postgrad.manchester.ac.uk
#$ -m e
#$ -pe smp.pe 32
#$ -l mem1500  
module load apps/binapps/anaconda3/2020.07
module load tools/env/proxy2

# EXTRACT CLUSTERS WITH NO HUMAN-READABLE NAME
conda activate seqkit_env
grep group_ pan_genome_reference.fa > unknown.genes
sed -i "s/>//g" unknown.genes
seqtk subseq  pan_genome_reference.fa  unknown.genes  > unknown.genes.fa



conda activate emboss_env
transeq -sequence unknown.genes.fa -outseq unknown.peptides.fa

# SEARCH DB
# running a search in blastp mode
conda activate diamondenv

#diamond blastp -d ~/scratch/imperial/ncbi-nr-refseq/reference -q unknown.peptides.fa -k 1 --max-hsps 1 -e 0.00001 --query-cover 50 --subject-cover 50 --id 70 -o staph.matches -p $NSLOTS


# FIND GENE IDS
awk '{ print $1 }' staph.matches > matched.centroids
awk '{ print $2 }' staph.matches > matched.peptides


for i in `cat matched.peptides`
do 
eresult=$(efetch -db protein -id ${i} -format xml | xtract -pattern Prot-ref_name -element Prot-ref_name_E)

echo "${i},${eresult}" >> matched.genes
done


: <<END
# IF GENE ID'S CANNOT BE FOUND EXTRACT PROTEIN TITLE
cat matched.genes | grep ',$' > unmatched.genes
for i in `cat unmatched.genes`
do  
eresult=$(esearch -db protein -query ${i} | esummary | xtract -pattern DocumentSummary -element Title)
echo "${i},${eresult}" >> unmatched.fix.genes
done


END
